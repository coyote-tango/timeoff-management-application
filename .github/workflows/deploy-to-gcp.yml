name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: timeoff-mgmt-cluster
  GKE_REGION: us-central1
  GKE_ZONE: us-central1-a
  DEPLOYMENT_NAME: timeoff-mgmt-deploy
  IMAGE_NAME: timeoff-mgmt-image
  CHART_NAME: timeoff-mgmt-chart
  CHART_VERSION: 0.1.0
  REPO_NAME: timeoff-mgmt-repo
  NAMESPACE: timeoff-mgmt-dev

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_DEPLOY_SA }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_DEPLOY_SA }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: cd terraform/dev && terraform init

      - name: Apply Terraform
        run: cd terraform/dev && terraform apply -auto-approve -input=false --var-file=terraform.tfvars

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_REGION }}
          credentials: ${{ secrets.GCP_DEPLOY_SA }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build .\
            --tag "${GKE_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}:${GITHUB_SHA}" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF"

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "$GKE_REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$GITHUB_SHA"

      # Install helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      # Create a new tag for the chart version
#      - name: Create Tag
#        uses: rickstaa/action-create-tag@v1
#        with:
#          tag: ${GITHUB_SHA}

      # Package the chart
      - name: Package Chart
        run: |
          helm
          helm package k8s/timeoff-mgmt

      # Publish the chart to the chart repo
      - name: Publish Chart
        run: |
          helm push ${CHART_NAME}-${CHART_VERSION}.tgz oci://$GKE_REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME

      # Deploy the chart to the GKE cluster
      - name: Deploy to GKE
        run: |
          helm upgrade $DEPLOYMENT_NAME oci://$GKE_REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$CHART_NAME \
          --version ${CHART_VERSION} --install --wait --atomic \
          --create-namespace --namespace $NAMESPACE \
          --set image.tag=$GITHUB_SHA,image.repository=$GKE_REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME --debug
